export const translations = {
  mainView: {
    config: "Settings",
    pwd: "Password",
    app: "Mini Program Code",
    success: "Access granted",
    fail: "Access denied",
    passwordDisabled: "Password access is disabled",
  },
  idleView: {
    week: {
      0: "Sun",
      1: "Mon",
      2: "Tue",
      3: "Wed",
      4: "Thu",
      5: "Fri",
      6: "Sat",
    },
  },
  appView: {
    knowed: "Got it",
    appQrcodeLbl: "Manage with the mini program",
  },
  pwdView: {
    title: "Password Access",
    pwd: "Enter password",
    pwdAccess: "Confirm",
    success: "Access granted",
    fail: "Access denied",
  },
  newPwdView: {
    title: "Set Admin Password",
    pwdAccess: "Confirm",
    pwd: "Enter password",
    confirmPwd: "Re-enter password",
    tip: "Note: The password must be at least 8 characters. If skipped, the default password will be used.",
    skip: "Skip for now",
    success: "Password set successfully",
    fail: "Failed to set password",
    pwdNotMatch: "Passwords do not match",
  },
  identityVerificationView: {
    title: "Identity Verification",
    pwd: "Enter admin password",
    pwdAccess: "Confirm",
    success: "Face recognition succeeded",
    fail: "Face recognition failed",
    pwdLog: "Password login",
    faceLog: "Face login",
    pwdFail: "Incorrect password",
  },
  configView: {
    title: "Settings",
    localUser: "Local Users",
    networkSetting: "Network",
    doorControl: "Door Control",
    systemSetting: "System",
    deviceInfo: "Device Info",
    recordQuery: "Access Logs",
    voiceBroadcast: "Voice Settings",
    cloudCert: "Cloud Certificate",
    factoryTest: "Factory Test",
    help: "Help",
    confirmExit: "Exit Settings",
    confirmExitContent: "Are you sure you want to exit Settings?",
  },
  cloudCertView: {
    title: "Cloud Certificate",
    cloudCertActive: "Activate Certificate",
    inputKey: "Enter key",
    key: "Key",
    tip: "Note: Activate using the key or by scanning the dedicated QR code. Contact support for details.",
    save: "Save",
  },
  doorControlView: {
    title: "Door Control",
    save: "Save",
    openDoorRelayDelay: "Open-door relay delay",
    antiTamperAlarm: "Tamper alarm",
    input: "Input",
    success: "Saved",
    fail: "Save failed",
    mqttAddr: "MQTT server",
    mqttUser: "MQTT username",
    mqttPwd: "MQTT password",
    onlineChecking: "Online check",
    onlineCheckingTimeout: "Check timeout",
    ms: "ms"
  },
  helpView: {
    title: "Help",
    scanCode: "Scan for instructions",
  },
  networkSettingView: {
    title: "Network",
    type: "Connection type",
    ip: "IP address",
    dhcp: "DHCP",
    mask: "Subnet mask",
    gateway: "Gateway",
    dns: "Primary DNS",
    dns2: "Secondary DNS",
    mac: "MAC address",
    status: "Status",
    save: "Save",
    input: "Input",
    ethernet: "Ethernet",
    wifi: "Wiâ€‘Fi",
    _4G: "4G",
    networkUnconnected: "Disconnected",
    networkConnected: "Connected",
    wifiName: "Network name",
    wifiPwd: "Password",
    wifiList: "Available networks",
    close: "Close",
    confirm: "Confirm",
    fail: "Save failed",
    success: "Saved",
  },
  systemSettingView: {
    title: "System Settings",
    displaySetting: "Display",
    faceRecognitionSetting: "Face Recognition",
    swipeCardRecognitionSetting: "Card Access",
    passLogSetting: "Access Logs",
    passwordOpenDoorSetting: "Password Access",
    passwordManagement: "Password Management",
    timeSetting: "Date & Time",
    restartDevice: "Restart",
    restoreDefaultConfig: "Restore Defaults",
    resetDevice: "Factory Reset",
    restart: "Restart",
    restoreDefault: "Restore",
    reset: "Reset",
    autoAdjustScreenBrightness: "Auto brightness",
    screenBrightness: "Brightness",
    autoTurnOffScreen: "Auto screen off",
    autoTurnOffScreenTime: "Screen off timer",
    autoScreenSaver: "Screensaver",
    autoScreenSaverTime: "Screensaver timer",
    displayIp: "Show IP address",
    displayDeviceSn: "Show device SN",
    language: "Language",
    displayCode: "Show mini program code",
    themeMode: "Theme",
    appMode: "App Mode",
    save: "Save",
    input: "Input",
    faceSimilarityThreshold: "Face similarity threshold",
    livenessDetectionFunction: "Liveness detection",
    livenessDetectionThreshold: "Liveness threshold",
    infraredImageDisplay: "Infrared image display",
    maskRecognition: "Mask recognition",
    maskRecognitionThreshold: "Mask recognition threshold",
    recognitionDistance: "Recognition distance",
    imageSaveType: "Image save type",
    saveStrangerImage: "Save stranger images",
    fullView: "Full view",
    face: "Face only",
    swipeCardRecognition: "Card check",
    passwordOpenDoor: "Password access",
    inputOriginalPassword: "Enter current password",
    inputNewPassword: "Enter new password",
    inputRepeatNewPassword: "Repeat new password",
    syncMode: "Time zone",
    ntpAddress: "NTP server",
    timeSyncSuccess: "Time synchronized",
    success: "Saved",
    fail: "Error",
    confirmation: "Confirmation",
    confirmRestart: "Confirm restart?",
    confirmRecoveryConfiguration: "Restore default settings?",
    confirmReset: "Confirm factory reset?",
    min: "min",
    prodMode: "Switch to product mode",
    devMode: "Switch to development mode",
    testMode: "Switch to testing mode",
    switchMode: "Switch"
  },
  deviceInfoView: {
    title: "Device Info",
    systemInfo: "System Info",
    dataCapacityInfo: "Storage Info",
    deviceQrCode: "Device QR Code",
    miniProgramCode: "Mini Program Code",
    deviceSN: "Device SN",
    firmwareVersion: "Firmware version",
    firmwareReleaseDate: "Release date",
    deviceTotalSpace: "Total space",
    deviceUsedSpace: "Used space",
    deviceRemainingSpace: "Available space",
    registeredPersonNum: "Registered users",
    localFaceWhiteListNum: "Local face whitelist",
    localPasswordWhiteListNum: "Local password whitelist",
    localSwipeCardWhiteListNum: "Local card whitelist",
    passLogTotalNum: "Total access records",
    updateDevice: "Update device",
    currentVersion: "Already up to date",
    deviceFreeSpace: "Free space",
  },
  factoryTestView: {
    title: "Factory Test",
    calibration: "Camera calibration",
    appMode: "App Mode",
  },
  localUserView: {
    title: "Local Users",
    empty: "No users added",
    add: "Add user",
    sync: "Sync to mini program",
    search: "Search by name or ID",
    searchBtn: "Search",
    edit: "Edit",
    attention: "Attention",
    attentionContent:
      "1. Local users will be synced to the mini program approval list. After success, local data will be cleared.\n2. As an admin, approve synced users in the mini program. After approval and required fields are completed, users will have access across the organization.\nThis action is irreversible. Continue?",
    tip: "Note",
    tipContent: "Please connect to the network first",
  },
  recordQueryView: {
    title: "Access Records",
    code: "User ID",
    time: "Time",
    result: "Result",
    stranger: "Stranger",
    face: "Face",
    card: "Card",
    password: "Password",
    qrcode: "QR code",
    success: "Granted",
    fail: "Denied",
  },
  recordQueryDetailView: {
    title: "Access Record Details",
    id: "User ID",
    name: "Name",
    idCard: "ID card number",
    time: "Access time",
    result: "Result",
    face: "Face snapshot",
  },
  voiceBroadcastView: {
    title: "Voice Settings",
    save: "Save",
    strangerVoice: "Stranger voice alert",
    voiceMode: "Voice mode",
    volume: "Volume",
    success: "Saved",
    fail: "Save failed",
  },
  confirm: {
    ok: "OK",
    no: "Cancel",
    upgrade: "Update device",
    upgrading: "Updating...",
    upgradeSuccess: "Update completed",
    upgradeFail: "Update failed",
    cloudCertActive: "Activate certificate",
    cloudCertActiveSuccess: "Activated",
    cloudCertActiveFail: "Activation failed",
    restartDevice: "Restart device",
    restartDeviceDis: "Configuration updated, the device will restart",
  },
  localUserAddView: {
    title: "Add User",
    title2: "Edit User",
    save: "Save",
    id: "ID",
    name: "Name",
    idCard: "ID card",
    face: "Face credential",
    pwd: "Password credential",
    card: "Card credential",
    type: "User type",
    input: "Input",
    enter: "Enter",
    generate: "Generate",
    edit: "Edit",
    reset: "Reset",
    confirm: "Confirm",
    confirmDelete: "Confirm deletion",
    confirmDeleteContent: "Delete this item?",
    confirmFace: "Delete face credential?",
    confirmPwd: "Delete password credential?",
    confirmCard: "Delete card credential?",
    pwdBoxLbl: "Generating...",
    pwdBoxSaveBtnLbl: "Generate new",
    pwdBoxConfirmBtnLbl: "OK",
    cardBoxResetBtnLbl: "Reset",
    cardBoxSaveBtnLbl: "Save",
    cardBoxLbl: "Reading card...",
    cardBoxInput: "Enter card number",
    delete: "Delete",
    success: "Success",
    fail: "Failed",
    requiredInfo: "Required fields missing",
    preview: "Preview",
    failRepeat: "ID already exists",
    failSimilarity: "Face too similar",
    failCardRepeat: "Card already exists",
    failPwdRepeat: "Password already exists",
  },
  faceEnterView: {
    title: "Face Enrollment",
    faceAdd: "Look at the camera",
    recogFace: "Face detected",
    recogSuccess: "Enrollment completed",
    faceError: "No face detected",
  },
  calibrationView: {
    firstCalibration: "First Calibration",
    secondCalibration: "Second Calibration"
  },
  faceService: {
    contrastFailure: "Comparison failed",
    scalingFailure: "Scaling failed",
    failedToSavePicture: "Failed to save image",
    convertToBase64Failed: "Failed to convert features to Base64",
    base64DecodingFailed: "Base64 decoding failed",
    similarityOverheight: "Face too similar",
    fileDoesNotExist: "File does not exist",
    theImageFormatIsNotSupported: "Unsupported image format",
    pictureReadFailure: "Failed to read image",
    thePictureSizeDoesNotMatch: "Image size mismatch",
    imageParsingFailure: "Image parsing failed",
    imageYUVProcessingFailed: "YUV processing failed",
    failedToConvertJpegToImage: "Failed to convert JPEG to image",
    faceInformationExtractionFailed: "Failed to extract face information",
    theFaceIsNotUnique: "Face is not unique",
  }
}